"Name" = 'Java 21'
"Author" = 'Quinn Narlo'
         
"Start Symbol" = <Program>
  
!-------------------------------------------------
!            TERMINAL
!-------------------------------------------------
ImportKeyword = 'import'
Dot           = '.'
Semicolon     = ';'
Identifiers   = {Letter}{AlphaNumeric}*
Numbers       = {Digit}+
AccessModifiers = 'public' | 'private' | 'protected'
ClassKeyword    = 'class'
StaticKeyword   = 'static'
FinalKeyword    = 'final'
ForKeyword      = 'for'
WhileKeyword    = 'while'
                                                           
DataTypes        = 'int'
                | 'boolean'
                | 'String' 
                | 'double'
                | 'float'
                | 'char'
BooleanValue     = 'true'
                 | 'false' 
                                
MethodTypes      = 'void'

ComparisonOperator = '=='
                   | '>='
                   | '<='
                   | '!='
                   | '<'
                   | '>'
                   
                   
IncrementalOperators = '++'
                     | '--'
                                      
{DQChar}         = {Printable} - ["]
Strings          = '"' {DQChar}* '"'         
!-------------------------------------------------
!            NONTERMINAL
!-------------------------------------------------
<Program> ::= <Statement> <Program>
<Program> ::= <Statement>

<Statement> ::= <Import>
             | <Class>
            


<Import> ::= ImportKeyword <QualifiedName> Semicolon
<QualifiedName> ::= Identifiers
                  | <QualifiedName> Dot Identifiers



<Class> ::= AccessModifiers ClassKeyword Identifiers '{' '}'
         |  AccessModifiers ClassKeyword Identifiers '{' <Variables> '}'
         |  AccessModifiers ClassKeyword Identifiers '{' <MethodsList> '}'

         
<MethodsList> ::= <Methods>
               |  <Methods> <MethodsList>
               
   
<Methods> ::= AccessModifiers <MethodRef> <MethodDataType> Identifiers <MethodPar> '{' <MethodsList> '}'
           |  <MethodDataType> Identifiers <MethodPar> '{' <MethodsList> '}'  
           |  <Variables>
           |  <IfConditions>
           |  <ForLoop>
           |  <WhileLoop>
           |  <Incremental>
              
<Expression> ::= Identifiers
              |  Numbers
              |  Strings
              |  BooleanValue
                        
<MethodRef> ::= StaticKeyword
             |  FinalKeyword    
             |                                   
<MethodParameterList> ::= <MethodParameter>
                       |  <MethodParameter> ',' <MethodParameterList>
<MethodParameter> ::= DataTypes Identifiers       
<MethodPar> ::= '(' ')'
             | '(' <MethodParameterList> ')'

<MethodDataType> ::= MethodTypes
                  | DataTypes


! Variables
<Variables> ::= DataTypes Identifiers Semicolon
             |  DataTypes Identifiers '=' Numbers Semicolon
             |  DataTypes Identifiers '=' Identifiers Semicolon
             |  DataTypes Identifiers '=' Strings Semicolon
             |  DataTypes Identifiers '=' BooleanValue Semicolon
             
<Block> ::= <BlockItems>
         |  <BlockItems> <Block>
         
<BlockItems> ::= <Variables>
              |  <IfConditions>
              |  <ForLoop>
              |  <WhileLoop>
              |  <Incremental>
              
! If-conditions
<IfConditions> ::= 'if' <IfConditionsComparison> <IfConditionsBlock>

<IfComparisonDefination> ::= <Expression> ComparisonOperator <Expression>
<IfConditionsComparison> ::= '(' ')'
                          | '(' <IfComparisonDefination> ')'
                          
<IfConditionsBlock> ::= '{' <Block> '}'
                     | '{' '}'
                     | '{' <Block> '}' 'else' '{' <Block> '}'
                     | '{'  '}' 'else' '{' '}'
                     
! For loop
<ForLoop> ::= ForKeyword <ForLoopItem> '{' <Block> '}'
           |  ForKeyword <ForLoopItem> '{' '}'

<ForLoopItem> ::= '(' <MethodDataType> Identifiers '=' <Expression> Semicolon Identifiers ComparisonOperator <Expression> Semicolon Identifiers IncrementalOperators ')'
               | '(' ')'

                  
! While Loop
<WhileLoop> ::= WhileKeyword <WhileLoopItem> '{' <Block> '}' 
             |  WhileKeyword <WhileLoopItem> '{' '}'
             
<WhileLoopItem> ::= '(' <Expression> ComparisonOperator <Expression> ')' 
                 |  '(' BooleanValue ')'      

<Incremental> ::= Identifiers IncrementalOperators Semicolon
               




